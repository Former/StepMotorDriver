/*********************************************************************
 * Name:      	main.h
 * Purpose:   	Declares simple wxWidgets application with GUI
 * 				created using wxFormBuilder.
 * Author:    
 * Created:   
 * Copyright: 
 * License:   	wxWidgets license (www.wxwidgets.org)
 * 
 * Notes:		Note that all GUI creation code is declared in
 * 				gui.h source file which is generated by wxFormBuilder.
 *********************************************************************/
 
#ifndef __main__
#define __main__

// main wxWidgets header file
#include <wx/wx.h>
// gui classes generated by wxFormBuilder
#include "gui.h"
#include "step_motor_driver.h"

////////////////////////////////////////////////////////////////////////////////
// application class declaration 
////////////////////////////////////////////////////////////////////////////////

class MainApp : public wxApp
{
	public:
		virtual bool OnInit();
};

// declare global static function wxGetApp()
DECLARE_APP(MainApp)

////////////////////////////////////////////////////////////////////////////////
// main application frame declaration 
////////////////////////////////////////////////////////////////////////////////

class MainDialog : public MainDialogBase
{
public:
	MainDialog( wxWindow *parent );
	virtual ~MainDialog();
	
protected:
	// protected event handlers
	virtual void 	OnCloseDialog( wxCloseEvent& event );
	virtual void 	OnOKClick( wxCommandEvent& event );
	virtual void 	OnCancelClick( wxCommandEvent& event );
	
	virtual void 	OnLeft( wxCommandEvent& event );
	virtual void 	OnRight( wxCommandEvent& event );
	virtual void 	OnCheck1( wxCommandEvent& event );
	virtual void 	OnCheck2( wxCommandEvent& event );
	virtual void 	OnCheck3( wxCommandEvent& event );
	virtual void 	OnCheck4( wxCommandEvent& event );
	
	void 			OnLeftOrRight(bool a_Left, size_t a_Index);
	bool 			StopLeftOrRightOp(size_t a_Index);
	void 			OnCheck();
	size_t 			GetMotorID();
	size_t			GetInterval();
	size_t			GetMaxCount();
	std::vector<Byte> GetBufSteps();
	
private:
	
	StepMotorDriver m_Driver;
	StepOperationPtr m_LatsCheckOperation;
	StepOperationPtr m_LeftOp[4];
	StepOperationPtr m_RightOp[4];
};

#endif //__main__
